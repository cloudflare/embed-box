mixin anchored(tag, text)
  - var escapedText = text.toLowerCase().replace(/[^\w]+/g, "-")
  | <#{tag} class="headline-with-anchor">
  a.without-underline(name=escapedText href=("#" + escapedText))=text
  | </#{tag}>

mixin codeExample(runnable, id)
  .code-example(class={"has-run-button": runnable} data-example-id=id)
    if runnable
      button.button(data-run="inline") Run inline
      button.button(data-run="modal") Run as modal
    block

+anchored("h2", "How to use")

:marked
  Download the <a download href="https://raw.githubusercontent.com/cloudflare/embed-box/master/dist/embed-box.min.js">latest release</a>
  and add this to your page:

+codeExample!= require("./examples/install-web.md")
+codeExample(true)!= require("./examples/basic-web.md")

:marked
  You can use EmbedBox with bundlers like Webpack and Browserify too:

+codeExample!= require("./examples/install-node.md")
+codeExample()!= require("./examples/basic-node.md")

:marked
  >EmbedBox supports Chrome, Safari, Firefox, and IE10+

+anchored("h3", "Embed code")
:marked
  In virtually every installation, things start with your existing HTML embed code.
  By providing EmbedBox with this user‘s specific code, it can be included inside the docs for each platform.

+codeExample!= require("./examples/install-web.md")
+codeExample(true)!= require("./examples/basic-web.md")

+anchored("h3", "Targets")
:marked
  Targets are the instruction pages for each type of CMS.
  For example, the WordPress target is the instructions for installing your tool onto WordPress.
  Targets default to the global options defined at the top level, but any option can be overridden for a specific target.

:marked
  In this example all targets except Weebly will use the same `embedCode`:

+codeExample(true)!= require("./examples/advanced.md")

:marked
  >If your script should be loaded in the `<head>` tag,
  >set `insertInHead: true` and the instructions will update accordingly.

+anchored("h3", "Options")

+anchored("h5", "assetPath")
:marked
  EmbedBox's assets are hosted by MaxCDN via [RawGit](http://rawgit.com/).

  Set `assetPath` to specify where assets are hosted.

p
  a.more.without-underline(download href=(ASSET_CDN_URL + "/assets/assets.zip")) Download assets

+codeExample!= require("./examples/asset-path.md")

+anchored("h5", "container")
:marked
  EmbedBox can appear inline by specifying `container` in the config.
  This can be a CSS selector.

+codeExample!= require("./examples/container-selector.md")

:marked
  ...or an HTML element.

+codeExample!= require("./examples/container-element.md")

+anchored("h5", "initialTarget")
:marked
  The target search screen can be skipped with `initialTarget`.
  Instead the box will render with a specific target already set.

+codeExample(true)!= require("./examples/initial-target.md")

+anchored("h5", "pluginURL")
:marked
  If you have an existing plugin for a CMS, specify it in that targets configuration and the docs will update automatically:

+codeExample(true)!= require("./examples/plugin-url.md")

:marked
  >Not every target supports both `embedCode` and `pluginURL` installations.
  >
  >If, for example, a given target only supports plugins and you don‘t provide one, that target will be automatically hidden.

table#target-supports
  thead
    tr
      th.id ID
      th.embed-code <code>embedCode</code>
      th.plugin-url <code>pluginUrl</code>
      th.insert-head <code>insertInto.head</code>
      th.insert-body <code>insertInto.body</code>
  tbody

+anchored("h5", "autoDownload")
:marked
  Plugins will automatically download when a target is selected.

  Set `autoDownload: false` to disable to this behavior.

+anchored("h5", "autoShow")
:marked
  EmbedBox will automatically appear on creation.

  Set `autoShow: false` to disable to this behavior.

+anchored("h5", "routing")
:marked
  EmbedBox can automatically update the hash of the page to allow visitors to link to a specific target’s instructions.
  If you don’t use the hash for another purpose, it’s a good idea to enable this by setting `routing: true`.

+codeExample(true)!= require("./examples/routing.md")

+anchored("h2", "Customization")

+anchored("h3", "Theme")
:marked
  The `theme` option allows you to customize the colors used to render EmbedBox.

  The instruction number labels will default to a provided `accentColor` unless `stepNumberColor` is set.

+codeExample(true)!= require("./examples/custom-theme.md")

+anchored("h5", "branding")
:marked
  EmbedBox includes a branded link when rendered as a modal.
  Set `branding: false` to hide the link entirely.

:marked
  If you need more configuration,
  the EmbedBox stylesheet can be extended.

+codeExample(true)!= require("./examples/custom-stylesheet.md")

+anchored("h3", "Content slots")
:marked
  Content can be inserted before and after the target instructions to provide extra instructions to your users.

  You can also include content only for specific targets.

+codeExample(true)!= require("./examples/content-slots.md")

+anchored("h3", "Labels")
:marked
  The labels used in the EmbedBox UI itself can be customized.
  They can be added as strings or functions.
  If you use functions, the EmbedBox `config` is passed to label functions.

+codeExample(true)!= require("./examples/labels.md")

+anchored("h3", "Ordering")
:marked
  Targets can be ordered with the `priority` option.
  A target will remain in the original order if not specified.

  Set `priority: -1` to disable a target entirely.

+codeExample(true)!= require("./examples/ordering.md")

:marked
  >The target selection screen will be skipped if only one target is visible.

+anchored("h3", "Custom targets")
:marked
  If you need to fully customize the targets you can create your own.

  Download the <a download href="https://raw.githubusercontent.com/cloudflare/embed-box/master/dist/embed-box-custom-target.min.js">Custom Target</a>
  and add this to your page:


+codeExample!= require("./examples/custom-install.md")

+codeExample(true)!= require("./examples/custom-target.md")

:marked
  >If you'd like to omit the default targets, download <a download href="https://raw.githubusercontent.com/cloudflare/embed-box/master/dist/embed-box-custom.min.js">EmbedBox Custom</a>.

:marked
  >For more information on creating new targets, see the [docs](https://github.com/cloudflare/embed-box/blob/master/docs/new-targets.md).

+anchored("h3", "API")

+anchored("h4", "Lifecycle")
:marked
  Capturing the `new EmbedBox()` instance in a variable lets us call the lifecycle methods when needed.

+codeExample(true)!= require("./examples/auto-show.md")

+anchored("h4", "fetchedTargets")
:marked
  Targets are populated in the `EmbedBox.fetchedTargets` array.

  `EmbedBox.getTargetIDs()` can be used to programatically get the bundled target IDs if desired.

+codeExample(false, "target-ids")!= require("./examples/get-target-ids.md")

+anchored("h4", "Events")
:marked
  While the EmbedBox constructor is synchronous, the browser will load the internal iframe asynchronously.

  The `onLoad` event will fire when the full EmbedBox is ready.

+codeExample(true)!= require("./examples/events.md")

+anchored("h4", "Reference")

+anchored("h5", "EmbedBox#destroy()")
:marked
  Hides and removes EmbedBox from the page. This is irreversible.

+anchored("h5", "EmbedBox#hide()")
:marked
  Hides EmbedBox.

+anchored("h5", "EmbedBox#show()")
:marked
  Shows EmbedBox.

+anchored("h5", "EmbedBox#mode")
:marked
  The mode is determined by the container element.

  An EmbedBox instance in the `<body>` will be `"modal"`.
  Otherwise this is set to `"inline"`.

+anchored("h5", "EmbedBox#visible")
:marked
  Retrieve visibility.


+anchored("h2", "Contributing")
:marked
  Please do, we would love for this to become a project of the community.
  Feel free to open an issue, submit a PR or contribute to the docs.

  Is there a CMS target that you'd like to see here?

  [Read more](https://github.com/cloudflare/embed-box/blob/master/docs/new-targets.md) about adding new targets.
